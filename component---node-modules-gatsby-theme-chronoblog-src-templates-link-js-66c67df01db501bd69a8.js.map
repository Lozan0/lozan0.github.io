{"version":3,"sources":["webpack:///./src/gatsby-theme-chronoblog/content-bottom.mdx","webpack:///./node_modules/gatsby-theme-chronoblog/src/components/link/link.js","webpack:///./node_modules/gatsby-theme-chronoblog/src/templates/link.js"],"names":["makeShortcode","name","props","console","warn","mdx","FeedSearch","Tags","FeedItems","layoutProps","_frontmatter","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","isMDXComponent","Link","data","description","excerpt","jsx","Layout","SEO","title","frontmatter","slug","fields","limit","showMoreButton","skipThisPageItem","yearSeparator","filter","item","ContentBottomMdx"],"mappings":"kNAOMA,EAAgBC,GAAQ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5BI,cAAA,MAASH,IAEZI,EAAaN,EAAc,cAC3BO,EAAOP,EAAc,QACrBQ,EAAYR,EAAc,aAC1BS,EAAc,CAClBC,aAT0B,IAYb,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIV,EAAKY,YAAAF,EAAAG,GAER,OAAOV,cALS,UAKCW,YAAA,GAAKP,EAAiBP,EAAK,CAAEW,WAAYA,EAAYI,QAAQ,cAC5EZ,cAAA,WACAA,cAACC,EAAU,CAACW,QAAQ,eACpBZ,cAACE,EAAI,CAACU,QAAQ,SACdZ,cAACG,EAAS,CAACS,QAAQ,eAKvBN,EAAWO,gBAAiB,G,mHCMbC,MA3BKP,IAAe,IAAd,KAAEQ,GAAMR,EAC3B,MAAMS,EAAcD,EAAKf,IAAIiB,SAAW,GAExC,OACEC,YAACC,IAAM,KACLD,YAACE,IAAG,CACFC,MAAON,EAAKf,IAAIsB,YAAYD,MAC5BE,KAAMR,EAAKf,IAAIwB,OAAOD,KACtBP,YAAaA,IAEfE,YAAA,YACEA,YAACf,IAAS,CACRsB,MAAO,EACPC,gBAAgB,EAChBC,kBAAkB,EAClBC,eAAe,EAEfC,OAASC,GAASA,EAAKN,OAAOD,OAASR,EAAKf,IAAIwB,OAAOD,QAG3DL,YAAA,aACEA,YAACa,IAAgB,SC3BVjB","file":"component---node-modules-gatsby-theme-chronoblog-src-templates-link-js-66c67df01db501bd69a8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst FeedSearch = makeShortcode(\"FeedSearch\");\nconst Tags = makeShortcode(\"Tags\");\nconst FeedItems = makeShortcode(\"FeedItems\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <hr />\n    <FeedSearch mdxType=\"FeedSearch\" />\n    <Tags mdxType=\"Tags\" />\n    <FeedItems mdxType=\"FeedItems\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\n\n// @ts-ignore\nimport ContentBottomMdx from '../../content-bottom.mdx';\n// @ts-ignore\nimport FeedItems from '../feed-items';\nimport Layout from '../layout';\nimport SEO from '../seo';\n\nexport const Link = ({ data }) => {\n  const description = data.mdx.excerpt || '';\n  //\n  return (\n    <Layout>\n      <SEO\n        title={data.mdx.frontmatter.title}\n        slug={data.mdx.fields.slug}\n        description={description}\n      />\n      <main>\n        <FeedItems\n          limit={1}\n          showMoreButton={false}\n          skipThisPageItem={false}\n          yearSeparator={false}\n          // filter by slug - get only with this slug\n          filter={(item) => item.fields.slug === data.mdx.fields.slug}\n        />\n      </main>\n      <aside>\n        <ContentBottomMdx />\n      </aside>\n    </Layout>\n  );\n};\n\nexport default Link;\n","import { graphql } from 'gatsby';\n\nimport Link from '../components/link';\n\nexport default Link;\n\nexport const linkQuery = graphql`\n  query($id: String!) {\n    mdx(id: { eq: $id }) {\n      id\n      excerpt\n      frontmatter {\n        title\n        date\n        link\n        tags\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 768, quality: 90) {\n              ...GatsbyImageSharpFluid_withWebp\n              presentationWidth\n              presentationHeight\n              src\n            }\n            resize(width: 768) {\n              src\n            }\n          }\n        }\n      }\n      fields {\n        slug\n      }\n      body\n    }\n  }\n`;\n"],"sourceRoot":""}